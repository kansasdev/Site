@page "/2025/01/Blazor_publish_github"
@page "/Site/2025/01/Blazor_publish_github"
<h1>Blazor on github pages</h1>
<p>
    When I was starting with some web develompment about 20 years ago, I always had similar problem. I was able to create some web page, but I was having problems with UI and graphics. My web pages were working but its look were rather poor.
    Another thing which I was having problems with was Javascript. I never had enough knowledge of this language. I was always searching for something which was able to minimize usage of Javascript.
    Additionally, it would be great if such solution would have some facilitation of creating UI.
</p>
<p>
    Something similar I was looking for was called Silverlight and has been introduced on 2007. Silverlight was a plugin installed to browser. There was a try to put desktop experience to web.
    As far as I remember it has had WPF style for creating UI. Something similar to Flash. However, during years 2010+ we were having increased popularity in mobile web. And big techs don't like plugins. 
    So Silverlight and Flash weren't in a good position. Both technologies have reached end of life about 2020/2021
</p>
<p>
    My post is not about Silverlight. It is about Blazor and how to use popular hosting to use with that technology. I don't want write what Blazor is, there are plenty materials about that. What is most important to me:
    <ul>
        <li>Try to limit Javascript - you can do many interesting things with C# on client side </li>
        <li>Two versions - Server side and client side. With client side you don't need to have complicated hosting - just raw static http server</li>
        <li>Rich support of 3rd party components. Since Blazor is supported by one of the big tech, the others are trying to prepare some interesting libraries</li>
    </ul>
    To be continued.
</p>
<p>
    When I was more involved in web development in the past, I do remember that there were always problem with hosting. I meant hosting in technologies I was working with - asp.net. There were many, many hosting for php but asp.net was only paid one.
    It was natural - during that days .net was only available on Windows Server which is paid product. So if you want to host asp.net as a non commercial site, it wouldn't a good choice.
    Situation was different with Silverlight. Since it was a plugin which was working on client side, you didn't need to have specialized hosting for that - just raw storing of files.
    It's similar with Blazor (client side) - you just need hosting of raw files
</p>
<p>
    My chooice was github pages. Since I am publishing some source code, I was having idea whether it is possible to host something. And it is. It's specialized functionality called github pages for that purpose.
    What is more interesting, you can create something called CI/CD workflow, so you don't need to manually publish your site - you just make a commit and if you have configured github workflows - it is just publishing it for you. 
    Of course it wasn't so easy, so I will explain my steps below
</p>
<p>
    First of all, you need to create blazor website from a Blazor Web App template (I am refering to Visual Studio), then I have created some content. After that I was following steps on a web page: https://ilovedotnet.org/blogs/blazor-wasm-publishing-to-github-pages -> <blockquote><i>Excuse me for providing no direct link, however putting this address to direct href is providing Set(4) exception. No idea at the moment</i></blockquote>
    I have followed mentioned steps, but there were some problems, which needs to be fixed
    <ul>
        <li>add master branch to main (simply put -master below -main)</li>
        <li>I haven't published just release, I have uploaded source code to github and have enabled github pages option</li>
        <li>I needed to allow github workflow to have write permission</li>
    </ul>
</p>
<p>
    After performing following above step, everytime I made a commit, website is being published
</p>

@code {

}
